Задание 1
Ответить на вопросы:
1. Что такое тестирование программного обеспечения?
2. Что такое качество программного обеспечения?
3. Когда начинать и заканчивать тестирование?
4. Какие знаете цели тестирования программного обеспечения?
5. Quality Assurance- это?
6. Quality Control - это?
7. Тестирование - это?
8. Какие знаете принципы тестирования?
9. Что такое верификация?
10. Что такое валидация?
11. Перечислите характеристики качества программного обеспечения и их атрибуты.


===========================================================================



1. Что такое тестирование программного обеспечения?
Тестирование				
— это одна из техник контроля качества, включающая в себя активности по:				
Test Management (планированию работ)				
Test Design (проектирование тестов)				
Test Execution (выполнение тестов)				
Test Analysis (анализ результатов тестирования)	

Процесс тестирования (test process): Фундаментальный процесс тестирования охватывает планирование тестирования,
анализ и дизайн тестов, внедрение и выполнение тестов, оценку достижения критериев выхода и отчетность,
а также работы по завершению тестирования. (ISTQB)		




2. Что такое качество программного обеспечения?
Качество ПО				
соответствие ожидаемого результата с действительным		
уровень качества ПО - уровень соответсвия  характеристик выпускаемого ПО, c требованиями заказчика и ожиданиями клиента	



3. Когда начинать и заканчивать тестирование?

Тестирование следует начинать, как только оно становится возможным. Например, тестирование бизнес-требований. Завершать следует тогда, когда его продолжение обойдется дороже, чем остановка.

Следует выделить 3 основных критерия для остановки, завершения тестирования:
Время
Бюджет
Все тест кейсы пройдены, найденные баги исправлены и перепроверены



4. Какие знаете цели тестирования программного обеспечения?

Цель тестирования — проверка соответствия ПО предъявляемым требованиям, обеспечение уверенности в качестве ПО, поиск очевидных ошибок в программном обеспечении, которые должны быть выявлены до того, как их обнаружат пользователи программы.
Повысить вероятность того, что приложение:				
будет соответствовать всем описанным требованиям.				
будет работать правильно при любых обстоятельствах.				
Предоставление актуальной информации о состоянии продукта на данный момент.		

Для чего проводится тестирование ПО?

Для проверки соответствия требованиям.
Для обнаружения проблем на более ранних этапах разработки и предотвращения повышения стоимости продукта.
Обнаружения вариантов использования, которые не были предусмотрены при разработке. А также взгляд на продукт со стороны пользователя.
Повышения лояльности к компании и продукту, т.к. любой обнаруженный дефект негативно влияет на доверие пользователей.




5. Quality Assurance

QA  (Quality Assurance, обеспечение качества)				
мероприятия на всех этапах разработки				
основная задача- выстроить систему, которая будет работать на качество продукта(предупреждать дефекты)				
тестирование документации				
внедрение методик по улучшению качества				
проактивная работа				
ревью кода на соответствие стандартам				
коммуникационные активности и проч.				
предотвращение ошибок на этапе написания документации	


6. Quality Control

QC (Quality Control, контроль качества)				
тестирование, но не ограничивается только им. QC обеспечивает соответствие требованиям к продукту				
и соответствия к заранее согласованному уровню качества				
основная задача- представить картину того что происходит с качеством продукта на каждом этапе разработки				
анализ кода				
технические обзоры				
анализ дизайна		




7. Тестирование

TESTING				
тестирование, проверка создаваемого подукта на соответствие требованиям				
Основная задача тестирования – выявить и зафиксировать дефекты.				
реактивная работа (выдали – проверил – описал дефекты – исправили)			




8. Какие знаете принципы тестирования

				
1. Тестирование демонстрирует наличие дефектов (Testing shows presence of defects)				
Тестирование может показать, что дефекты присутствуют в системе, но не может доказать, что их нет.				
				
2. Исчерпывающее тестирование недостижимо (Exhaustive testing is impossible)				
Полное тестирование с использованием всех комбинаций вводов и предусловий физически невыполнимо, за исключением тривиальных случаев.				
				
3. Раннее тестирование (Early testing)				
Чтобы найти дефекты как можно раньше, активности по тестированию должны быть начаты как можно раньше в жизненном цикле разработки.				
				
4. Скопление дефектов (Defects clustering)				
Как правило, большая часть дефектов, обнаруженных при тестировании, содержится в небольшом количестве модулей.				
				
5. Парадокс пестицида (Pesticide paradox)				
Если одни и те же тесты будут прогоняться много раз, в конечном счете этот набор тестовых сценариев больше не будет находить новых дефектов.				
				
6. Тестирование зависит от контекста (Testing is context dependent)				
Тестирование выполняется по-разному в зависимости от контекста.				
				
7. Заблуждение об отсутствии ошибок (Absence-of-errors fallacy)				
Обнаружение и исправление дефектов не помогут, если созданная система не подходит пользователю и не удовлетворяет его ожиданиям и потребностям.				
				



9-10 Валидация vs Верификация				
				
ВЕРИФИКАЦИЯ				
статическая практика проверки документов дизайна, архитектуры, и тд, проходит без запуска кода				
верификация всегда происходит до валидации				
делаем ли мы продукт правильно? соответствует ли продукт внутренним требованиям (документации)?				
				
ВАЛИДАЦИЯ				
динамический процесс оценки конечного продукта, когда необходимо проверить соответствует ли ПО				
ожиданиям клиента				
всегда после верификации				
делаем ли мы правильный продукт?создается ли продукт правильно с точки зрения ожиданий клиента?				
				
				
Например, лекарство прошло все положенные испытания и поступило в продажу. Значит ли это что оно может				
быть применено каким-то конкретным больным? Нет, т. к. каждый пациент имеет свои особенности и конкретно				
для этого лекарство может быть губительным, т.е. кто–то (врач) должен подтвердить: да, этому больному				
можно принимать это лекарство. То есть врач должен выполнить валидацию: придать законную силу				
конкретному применению.				
				
пример. Предприятие выпускает трубы, предназначенные для закладки в землю, в соответствии с				
некоторыми ТУ (Техническими условиями). Продукция этим ТУ соответствует, но поступил заказ,				
предполагающий укладку труб по дну моря. Могут ли трубы, соответствующие имеющимся ТУ,				
быть применены в данном случае? Именно валидация и дает ответ на этот вопрос.				
				




11. Перечислите характеристики качества программного обеспечения и их атрибуты.

Атрибуты оценки качества -
функциональность;
производительность (обычно пиковая);
системность (совместимость в системе);
надежность (отказостойкость, самовосстанавливаемость);
защищенность (управление вероятными уязвимостями, отказами);
дружественность (простота, легкость, комфортность при работе)
Они могут быть внешними и внутренними. На внутренних атрибутах основываются внешние и внутренние метрики качества, которые служат для количественной оценки программного обеспечения.